{
  "name": "Mail-tracker",
  "tagline": "Package for Laravel to inject tracking code into outgoing emails.",
  "body": "# MailTracker\r\n\r\n[![Latest Version on Packagist][ico-version]][link-packagist]\r\n[![Software License][ico-license]](LICENSE.md)\r\n[![Total Downloads][ico-downloads]][link-downloads]\r\n\r\nMailTracker will hook into all outgoing emails from Laravel/Lumen and inject a tracking code into it.  It will also store the rendered email in the database.  There is also an interface to view sent emails.\r\n\r\n## NOTE: For Laravel < 5.3.23 you MUST use version 2.0 or earlier.\r\n\r\n## Upgrade from 2.0 or earlier\r\n\r\nFirst, upgrade to version 2.1 by running:\r\n\r\n``` bash\r\n$ composer require jdavidbakr/mail-tracker ~2.1\r\n```\r\n\r\nIf you are updating from an earlier version, you will need to update the config file and run the new migrations.  For best results, make a backup copy of config/mail-tracker.php and the views in resources/views/vendor/emailTrackingViews (if they exists) to restore any values you have customized, then delete that file and run\r\n\r\n``` bash\r\n$ php artisan vendor:publish\r\n$ php artisan migrate\r\n```\r\n\r\n## Install (Laravel)\r\n\r\nVia Composer\r\n\r\n``` bash\r\n$ composer require jdavidbakr/mail-tracker ~2.1\r\n```\r\n\r\nAdd the following to the providers array in config/app.php:\r\n\r\n``` php\r\njdavidbakr\\MailTracker\\MailTrackerServiceProvider::class,\r\n```\r\n\r\nPublish the config file and migration\r\n``` bash\r\n$ php artisan vendor:publish --provider='jdavidbakr\\MailTracker\\MailTrackerServiceProvider'\r\n```\r\n\r\nRun the migration\r\n``` bash\r\n$ php artisan migrate\r\n```\r\n\r\n## Install (Lumen)\r\n\r\nVia Composer\r\n\r\n``` bash\r\n$ composer require jdavidbakr/mail-tracker ~2.1\r\n```\r\n\r\nRegister the following service provider in bootstrap/app.php\r\n\r\n``` php\r\njdavidbakr\\MailTracker\\MailTrackerServiceProvider::class\r\n```\r\n\r\nCopy vendor/jdavidbakr/mail-tracker/migrations/2016_03_01_193027_create_sent_emails_table.php and vendor/jdavidbakr/mail-tracker/config/mail-tracker.php to your respective migrations and config folders. You may have to create a config folder if it doesn't already exist.\r\n\r\nRun the migration\r\n``` bash\r\n$ php artisan migrate\r\n```\r\n\r\n## Usage\r\n\r\nOnce installed, all outgoing mail will be logged to the database.  The following config options are available in config/mail-tracker.php:\r\n\r\n* **name**: set your App Name.\r\n* **inject-pixel**: set to true to inject a tracking pixel into all outgoing html emails.\r\n* **track-links**: set to true to rewrite all anchor href links to include a tracking link. The link will take the user back to your website which will then redirect them to the final destination after logging the click.\r\n* **expire-days**: How long in days that an email should be retained in your database.  If you are sending a lot of mail, you probably want it to eventually expire.  Set it to zero to never purge old emails from the database.\r\n* **route**: The route information for the tracking URLs.  Set the prefix and middlware as desired.\r\n* **admin-route**: The route information for the admin.  Set the prefix and middleware.\r\n* **admin-template**: The params for the Admin Panel and Views. You can integrate your existing Admin Panel with the MailTracker admin panel.\r\n* **date-format**: You can define the format to show dates in the Admin Panel.\r\n\r\n## Events\r\n\r\nWhen an email is sent, viewed, or a link is clicked, its tracking information is counted in the database using the jdavidbark\\MailTracker\\Model\\SentEmail model. You may want to do additional processing on these events, so an event is fired in these cases:\r\n\r\n* jdavidbakr\\MailTracker\\Events\\EmailSentEvent\r\n* jdavidbakr\\MailTracker\\Events\\ViewEmailEvent\r\n* jdavidbakr\\MailTracker\\Events\\LinkClickedEvent\r\n\r\nIf you are using the Amazon SNS notification system, an event is fired when you receive a permanent bounce.  You may want to mark the email as bad or remove it from your database.\r\n\r\n* jdavidbakr\\MailTracker\\Events\\PermanentBouncedMessageEvent\r\n\r\nTo install an event listener, you will want to create a file like the following:\r\n\r\n``` php\r\n<?php\r\n\r\nnamespace App\\Listeners;\r\n\r\nuse jdavidbakr\\MailTracker\\Events\\ViewEmailEvent;\r\n\r\nclass EmailViewed\r\n{\r\n    /**\r\n     * Create the event listener.\r\n     *\r\n     * @return void\r\n     */\r\n    public function __construct()\r\n    {\r\n        //\r\n    }\r\n\r\n    /**\r\n     * Handle the event.\r\n     *\r\n     * @param  ViewEmailEvent  $event\r\n     * @return void\r\n     */\r\n    public function handle(ViewEmailEvent $event)\r\n    {\r\n        // Access the model using $event->sent_email...\r\n    }\r\n}\r\n```\r\n\r\n``` php\r\n<?php\r\n\r\nnamespace App\\Listeners;\r\n\r\nuse jdavidbakr\\MailTracker\\Events\\PermanentBouncedMessageEvent;\r\n\r\nclass BouncedEmail\r\n{\r\n    /**\r\n     * Create the event listener.\r\n     *\r\n     * @return void\r\n     */\r\n    public function __construct()\r\n    {\r\n        //\r\n    }\r\n\r\n    /**\r\n     * Handle the event.\r\n     *\r\n     * @param  PermanentBouncedMessageEvent  $event\r\n     * @return void\r\n     */\r\n    public function handle(PermanentBouncedMessageEvent $event)\r\n    {\r\n        // Access the email address using $event->email_address...\r\n    }\r\n}\r\n```\r\n\r\nThen you must register the event in your \\App\\Providers\\EventServiceProvider $listen array:\r\n\r\n``` php\r\n/**\r\n * The event listener mappings for the application.\r\n *\r\n * @var array\r\n */\r\nprotected $listen = [\r\n    'jdavidbakr\\MailTracker\\Events\\ViewEmailEvent' => [\r\n        'App\\Listeners\\EmailViewed',\r\n    ],\r\n    'jdavidbakr\\MailTracker\\Events\\PermanentBouncedMessageEvent' => [\r\n        'App\\Listeners\\BouncedEmail',\r\n    ],\r\n];\r\n```\r\n\r\n## Amazon SES features\r\n\r\nIf you use Amazon SES, you can add some additional information to your tracking.  To set up the SES callbacks, first set up SES notifications under your domain in the SES control panel.  Then subscribe to the topic by going to the admin panel of the notification topic and creating a subscription for the URL you copied from the admin page.  The system should immediately respond to the subscription request.  If you like, you can use multiple subscriptions (i.e. one for delivery, one for bounces).  See above for events that are fired on a failed message.\r\n\r\n## Views\r\n\r\nWhen you do the php artisan vendor:publish simple views will add to your resources/views/vendor/emailTrakingViews and you can customize.\r\n\r\n## Admin Panel\r\n\r\nConfig your admin-route in the config file. Set the prefix and middlware.\r\nThe route name is 'mailTracker_Index'. The standard admin panel route is located at /email-manager.\r\nYou can use route names to include them into your existing admin menu.\r\nYou can customize your route in the config file.\r\nYou can see all sent emails, total opens, total urls clicks, show individuals emails and show the urls clicked details.\r\nAll views (email tamplates, panel) can be customized in resources/views/vendor/emailTrakingViews.\r\n\r\n## Contributing\r\n\r\nPlease see [CONTRIBUTING](CONTRIBUTING.md) and [CONDUCT](CONDUCT.md) for details.\r\n\r\n## Security\r\n\r\nIf you discover any security related issues, please email me@jdavidbaker.com instead of using the issue tracker.\r\n\r\n## Credits\r\n\r\n- [J David Baker][link-author]\r\n- [All Contributors][link-contributors]\r\n\r\n## License\r\n\r\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\r\n\r\n[ico-version]: https://img.shields.io/packagist/v/jdavidbakr/mail-tracker.svg?style=flat-square\r\n[ico-license]: https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square\r\n[ico-travis]: https://img.shields.io/travis/jdavidbakr/MailTracker/master.svg?style=flat-square\r\n[ico-scrutinizer]: https://img.shields.io/scrutinizer/coverage/g/jdavidbakr/MailTracker.svg?style=flat-square\r\n[ico-code-quality]: https://img.shields.io/scrutinizer/g/jdavidbakr/MailTracker.svg?style=flat-square\r\n[ico-downloads]: https://img.shields.io/packagist/dt/jdavidbakr/mail-tracker.svg?style=flat-square\r\n\r\n[link-packagist]: https://packagist.org/packages/jdavidbakr/mail-tracker\r\n[link-travis]: https://travis-ci.org/jdavidbakr/MailTracker\r\n[link-scrutinizer]: https://scrutinizer-ci.com/g/jdavidbakr/MailTracker/code-structure\r\n[link-code-quality]: https://scrutinizer-ci.com/g/jdavidbakr/MailTracker\r\n[link-downloads]: https://packagist.org/packages/jdavidbakr/mail-tracker\r\n[link-author]: https://github.com/jdavidbakr\r\n[link-contributors]: ../../contributors\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}